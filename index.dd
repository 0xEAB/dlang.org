Ddoc

$(D_S D Programming Language $(VER),

$(V1
$(P The D book $(AMAZONLINK 1590599608, Learn to Tango with D)
by Kris Bell, Lars Ivar Igesund, Sean Kelly and Michael Parker is now out.
)
)

$(V2 $(P The K&amp;R of D  is here! Get $(AMAZONLINK 0321635361, The D
Programming  Language) by Andrei  Alexandrescu&mdash;the authoritative
source on everything D. From the book's introduction:)

$(BLOCKQUOTE  D is  a language  that attempts  to consistently  do the
right thing  within the constraints  it chose: system-level  access to
computing resources,  high performance, and  syntactic similarity with
C-derived languages.   In trying  to do the  right thing,  D sometimes
stays with tradition and does what other languages do, and other times
it breaks  tradition with a  fresh, innovative solution.   On occasion
that meant revisiting the very constraints that D ostensibly embraced.
For example, large program fragments  or indeed entire programs can be
written  in a  well-defined  memory-safe subset  of  D, which  entails
giving away a small amount of  system-level access for a large gain in
program debuggability.))

$(P  D  is  a  multi-paradigm  programming language  that  combines  a
principled approach  with a  focus on practicality.   In D you  get to
harness  the power  and high  performance of  C and  C++ and  also the
safety and  programmer productivity of  modern languages such  as Ruby
and  Python.  Special  attention  is  given to  the  needs of  quality
assurance, documentation, portability, and reliability.)

$(P The D language is statically typed and compiles directly to machine code.
It&rsquo;s multiparadigm, supporting many programming styles: 
imperative, object oriented, and metaprogramming. It&rsquo;s a member of the C 
syntax family, and its appearance is very similar to that of C++.
Here&rsquo;s a quick list of $(LINK2 comparison.html, features).
)

$(P There are two versions of the language:
$(OL
    $(LI $(LINK2 http://www.digitalmars.com/d/1.0/index.html, D version 1)
	which is in maintenance mode.)
    $(LI $(LINK2 http://www.digitalmars.com/d/2.0/index.html, D version 2)
	which is recommended for new projects.)
)
)

$(P There are currently four implementations:
$(OL
    $(LI Digital Mars dmd for
	Windows $(LINK2 http://www.digitalmars.com/d/1.0/dmd-windows.html, 1.0)
		$(LINK2 http://www.digitalmars.com/d/2.0/dmd-windows.html, 2.0),
	x86 Linux $(LINK2 http://www.digitalmars.com/d/1.0/dmd-linux.html, 1.0)
		$(LINK2 http://www.digitalmars.com/d/2.0/dmd-linux.html, 2.0),
	Mac OS X $(LINK2 http://www.digitalmars.com/d/1.0/dmd-osx.html, 1.0)
		$(LINK2 http://www.digitalmars.com/d/2.0/dmd-osx.html, 2.0), and
	x86 FreeBSD $(LINK2 http://www.digitalmars.com/d/1.0/dmd-freebsd.html, 1.0)
    )

    $(LI LLVM D Compiler $(LINK2 http://www.dsource.org/projects/ldc, ldc)
	for D version 1.
    )

$(COMMENT
    $(LI Gnu D compiler $(LINK2 http://dgcc.sourceforge.net/, gdc)
	for several platforms, including
	$(LINK2 http://gdcwin.sourceforge.net/, Windows) and
	$(LINK2 http://gdcmac.sourceforge.net/, Mac OS X)
	for D versions 1.030 and 2.014.
    )
)
    $(LI Gnu D compiler $(LINK2 http://bitbucket.org/goshawk/gdc/wiki/Home, gdc).
    )

    $(LI $(LINK2 http://dnet.codeplex.com/, D.NET compiler)
	alpha for .NET for D version 2.)
)
)

$(P A large and growing collection of D source code and projects
are at $(LINK2 http://www.dsource.org, dsource).
More links to innumerable D wikis, libraries, tools, media articles,
etc. are at $(LINK2 http://www.digitalmars.com/d/dlinks.html, dlinks).
)

$(COMMENT $(P
This document is available as a
$(LINK2 http://www.prowiki.org/wiki4d/wiki.cgi?LanguageSpecification/PDFArchive, pdf),
as well as in
$(LINK2 http://www.kmonos.net/alang/d/, Japanese)
and
$(LINK2 http://elderane.50webs.com/tuto/d/, Portugese)
translations.
A German book
$(LINK2 http://www.amazon.de/Programmieren-D-Einf%C3%BChrung-neue-Programmiersprache/dp/3939084697/, Programming in D: Introduction to the new Programming Language)
is available, as well as
a Japanese book
$(LINK2 http://www.gihyo.co.jp/books/syoseki-contents.php/4-7741-2208-4, D Language Perfect Guide),
and a Turkish book
$(LINK2 http://ddili.org/ders/d/, D Programlama Dili Dersleri).
))

$(COMMENT: Japanese by Kazuhiro Inaba, Portugese by Christian Hartung)

$(P This is an example D program illustrating some of the capabilities:)
----
#!/usr/bin/rdmd
/* shebang is supported */

/* Hello World in D
   To compile:
     dmd hello.d (or on Unix just make hello.d executable and run it)
   or to optimize:
     dmd -O -inline -release hello.d
*/

import std.stdio;

void main(string[] args)
{
$(V1      writefln("Hello World, Reloaded");)$(V2      writeln("Hello World, Reloaded");)

    // auto type inference and built-in foreach
    foreach (argc, argv; args)
    {
        // Object Oriented Programming
        auto cl = new CmdLin(argc, argv);
        // Improved typesafe printf
        writeln(cl.argnum, cl.suffix, " arg: ", cl.argv);
        // Automatic or explicit memory management
        delete cl;
    }

    // Nested structs and classes
    struct specs
    {
        // all members automatically initialized
        int count, allocated;
    }

    // Nested functions can refer to outer
    // variables like args
    specs argspecs()
    {
        specs* s = new specs;
        // no need for '->'
        s.count = args.length;		   // get length of array with .length
        s.allocated = typeof(args).sizeof; // built-in native type properties
        foreach (argv; args)
            s.allocated += argv.length * typeof(argv[0]).sizeof;
        return *s;
    }

    // built-in string and common string operations
    writefln("argc = %d, " ~ "allocated = %d",
	argspecs().count, argspecs().allocated);
}

class CmdLin
{
    private int _argc;
    private string _argv;

public:
    this(int argc, string argv)	// constructor
    {
        _argc = argc;
        _argv = argv;
    }

    int argnum()
    {
        return _argc + 1;
    }

    string argv()
    {
        return _argv;
    }

    string suffix()
    {
        string suffix = "th";
        switch (_argc)
        {
          case 0:
            suffix = "st";
            break;
          case 1:
            suffix = "nd";
            break;
          case 2:
            suffix = "rd";
            break;
          default:
	    break;
        }
        return suffix;
    }
}
----

$(P $(B Notice:) We welcome feedback about the D compiler or language, but please be explicit about
any claims to intellectual property rights with a copyright or patent notice if you have such for
your contributions.  We want D to remain open and free to use, and do not wish to be caught by
someone posting a patch to the compiler, and then later claim compensation for that work.)

)

Macros:
	TITLE=Intro
	WIKI=Intro

